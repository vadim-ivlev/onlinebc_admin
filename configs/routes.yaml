

# GraphQL --------------------------------------------------



# - comment   : <b>list_broadcast(...)</b> Получить список трансляций и их количество.
#   methods   :
#   - POST
#   - GET    
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query{
#         list_broadcast(search: "жеребьевка" ){
#           length
#           list {
#             id
#             title
#           } 
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 


# - comment   : <b>list_full_broadcast(...)</b> Получить список трансляций c постами, ответами и их количество.
#   methods   :
#   - POST
#   - GET    
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query{
#         list_full_broadcast(search: "трансляция" ){
#           length
#           list {
#             id
#             title
#               posts {
#                 id 
#                 id_parent 
#                 text 
#                 author
#                 images { 
#                   id 
#                   source 
#                   thumbs {
#                     type
#                     filepath
#                     height
#                     width
#                   }
#                   filepath
#                 }
#                 answers {id id_parent text author}
#               }
#           } 
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 




# - comment   : <b>get_broadcast(id)</b>. Получить трансляцию c постами, ответами и изображениями по идентификатору трансляции
#   methods   :
#   - POST
#   - GET    
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         get_broadcast (id: 354) { 
#           id  
#           title  
#           time_created 
#           link_article 
#           posts {
#             id 
#             id_parent 
#             text 
#             author
#             images { 
#               id 
#               source 
#               thumbs {
#                 type
#                 filepath
#                 height
#                 width
#               }
#               filepath
#             }
#             answers {
#               id 
#               id_parent 
#               text 
#               author 
#               images { 
#                 id 
#                 source 
#                 thumbs {
#                   type
#                   filepath
#                   height
#                   width
#                 }
#                 filepath
#               }
#             }
#           }
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 



# - comment   : <b>get_broadcast_posts(id_broadcast)</b> Получить посты трансляции по ее идентификатору.
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         get_broadcast_posts(
#           id_broadcast: 354,  
#           show_answers: false 
#         ) 
#         { 
#           id 
#           id_broadcast 
#           id_parent
#           text 
#           author
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 



# - comment   : <b>get_post_images(post_id)</b> Получить медиа поста по его идентификатору.
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         get_post_images(post_id: 23932) { id filepath source}
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 


# - comment   : <b>get_post_answers(id_parent)</b> Получить ответы к посту по его идентификатору.
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         get_post_answers(id_parent: 23932) { 
#           id 
#           id_broadcast 
#           text 
#           author
#           }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 





# - comment   : <b>get_post(id)</b> Получить пост c ответами и изображениями по идентификатору
#   methods   :
#   - POST
#   - GET   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         #get_post(id:23932){
#         get_post(id:21202){
#           id 
#           id_parent 
#           text 
#           author
#           images { 
#             id 
#             source 
#             thumbs {
#               type
#               filepath
#               height
#               width
#             }
#             filepath
#           }
#           answers {
#             id 
#             id_parent 
#             text 
#             author 
#             images{ 
#               id 
#               source 
#               thumbs {
#                 type
#                 filepath
#                 height
#                 width
#               }
#               filepath
#             }
#           }
#         }
#       }

#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 


# - comment   : <b>get_image(id)</b> Получить медиа по идентификатору
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       query {
#         get_image(id:5330){
#           id 
#           filepath 
#           thumbs {
#             type
#             filepath
#             height
#             width
#           }
#           source
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 



# - comment   : <b>create_broadcast(...)</b> Создать трансляцию
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       mutation {
#         create_broadcast(
#           title:"new broadcast1", 
#           time_created: 123, 
#           link_article:"link2"
#         ) 
#         {
#           id title 
#           time_created 
#           time_begin 
#           link_article
#         }
#       }
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 



# - comment   : <b>update_broadcast(...)</b> Обновить трансляцию
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       mutation {
#         update_broadcast(
#           id: 1000,
#           title:"updated broadcast 22", 
#           time_created: 124, 
#           link_article:"updated link2"
#         ) 
#         {
#           id title 
#           time_created 
#           time_begin 
#           link_article
#         }
#       }  
      
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 


# - comment   : <b>delete_broadcast(id)</b> Удалить трансляцию
#   methods   :
#   - POST
#   - GET    
   
#   path      : /graphql
#   example   : /graphql
#   controller: GraphQL
#   params    :
#   - comment: запрос
#     name   : query
#     value  : '{query}'
#     test   : |- 
#       mutation {
#         delete_broadcast(
#           id: 1000
#         ) 
#         {
#           id title 
#           time_created 
#           time_begin 
#           link_article
#         }
#       }  
      
#   - comment: переменные
#     name   : variables
#     value  : '{variables}'
#     test   : '{}' 



# REST ====================================================================================================================
# REST ====================================================================================================================
# REST ====================================================================================================================
# REST ====================================================================================================================


# #  image ---------------------------------------------------

# - comment   : Получить Медиа с идентификатором id
#   methods   :
#   - GET
#   path      : /get/:entity/:id
#   example   : /get/image/5330
#   controller: GetEntity

# # post ------------------------------------------------------------

# - comment   : Получить пост с идентификатором id
#   methods   : 
#   - GET
#   path      : /get/:entity/:id
#   example   : /get/post/23932
#   controller: GetEntity


# #  broadcast ---------------------------------------------------

# - comment   : Получить трансляцию с идентификатором id
#   methods   : 
#   - GET
#   path      : /get/:entity/:id
#   example   : /get/broadcast/354
#   controller: GetEntity





# COMMON ====================================================================================================================
# COMMON ====================================================================================================================
# COMMON ====================================================================================================================
# COMMON ====================================================================================================================




# Общие ---------------------------------------------------

# - comment: Стартовая страница
#   methods: [GET]
#   path: /
#   example: /
#   controller: LandingPage

# - comment: JSON  маршрутов.  Документация API.
#   methods: [GET]
#   path: /routes
#   example: /routes
#   controller: GetRoutes





# FRONTEND ====================================================================================================================
# FRONTEND ====================================================================================================================
# FRONTEND ====================================================================================================================
# FRONTEND ====================================================================================================================



# Фронтэнд ---------------------------------------------------  


- comment: Список трансляций
  methods: [GET]
  path: /api/broadcasts
  example: /api/broadcasts
  controller: GetBroadcasts

- comment: Трансляция с идентификатором id и ее постами
  methods: [GET]
  path: /api/full-broadcast/:id
  example: /api/full-broadcast/354
  controller: GetFullBroadcast

- comment: Посты трансляции с идентификатором id
  methods: [GET]
  path: /api/posts/:id
  example: /api/posts/354
  controller: GetPosts

- comment: Ответы к посту с идентификатором id
  methods: [GET]
  path: /api/answers/:id
  example: /api/answers/23932
  controller: GetAnswers

- comment: Медиа для поста с идентификатором id
  methods: [GET]
  path: /api/images/:id
  example: /api/images/23932
  controller: GetMedia

- comment: Трансляция с идентификатором id и ее постами. Legacy
  methods: [GET]
  path: /api/online.php
  example: /api/online.php
  controller: GetFullBroadcastLegacy
  params:
  - comment: Идентификатор трансляции
    name: id
    inptype : number
    value: ':id'
    test: 354

# - comment: Список трансляций.Legacy
#   methods: [GET, HEAD]
#   path: /api/
#   example: /api/
#   controller: GetBroadcastList
#   params:
#   - comment: Основная {0|1}
#     name: main
#     inptype : number
#     value: '{main}'
#     test: 0
#   - comment: Активность {0|1}
#     name: active
#     inptype : number
#     value: '{active}'
#     test: 0
#   - comment: Номер
#     name: num
#     inptype : number
#     value: '{num}'
#     test: 3